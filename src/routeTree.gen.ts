/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";
import { Route as ProfileIndexImport } from "./routes/profile/index";
import { Route as DashboardIndexImport } from "./routes/dashboard/index";
import { Route as AuthIndexImport } from "./routes/auth/index";
import { Route as AuthSignupImport } from "./routes/auth/signup";

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ProfileIndexRoute = ProfileIndexImport.update({
  path: "/profile/",
  getParentRoute: () => rootRoute,
} as any);

const DashboardIndexRoute = DashboardIndexImport.update({
  path: "/dashboard/",
  getParentRoute: () => rootRoute,
} as any);

const AuthIndexRoute = AuthIndexImport.update({
  path: "/auth/",
  getParentRoute: () => rootRoute,
} as any);

const AuthSignupRoute = AuthSignupImport.update({
  path: "/auth/signup",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/auth/signup": {
      id: "/auth/signup";
      path: "/auth/signup";
      fullPath: "/auth/signup";
      preLoaderRoute: typeof AuthSignupImport;
      parentRoute: typeof rootRoute;
    };
    "/auth/": {
      id: "/auth/";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/dashboard/": {
      id: "/dashboard/";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/profile/": {
      id: "/profile/";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof ProfileIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/auth": typeof AuthIndexRoute;
  "/dashboard": typeof DashboardIndexRoute;
  "/profile": typeof ProfileIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/auth": typeof AuthIndexRoute;
  "/dashboard": typeof DashboardIndexRoute;
  "/profile": typeof ProfileIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/auth/": typeof AuthIndexRoute;
  "/dashboard/": typeof DashboardIndexRoute;
  "/profile/": typeof ProfileIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/auth/signup" | "/auth" | "/dashboard" | "/profile";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/auth/signup" | "/auth" | "/dashboard" | "/profile";
  id:
    | "__root__"
    | "/"
    | "/auth/signup"
    | "/auth/"
    | "/dashboard/"
    | "/profile/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthSignupRoute: typeof AuthSignupRoute;
  AuthIndexRoute: typeof AuthIndexRoute;
  DashboardIndexRoute: typeof DashboardIndexRoute;
  ProfileIndexRoute: typeof ProfileIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthIndexRoute: AuthIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/signup",
        "/auth/",
        "/dashboard/",
        "/profile/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
